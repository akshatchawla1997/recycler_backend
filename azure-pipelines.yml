# Python Django
# Test a Django project on multiple versions of Python.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

pool:
  vmImage: ubuntu-latest
strategy:
  matrix:
    Python39:
      PYTHON_VERSION: '3.9'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(PYTHON_VERSION)'
    architecture: 'x64'

- task: PythonScript@0
  displayName: 'Export project path'
  inputs:
    scriptSource: 'inline'
    script: |
      """Search all subdirectories for `manage.py`."""
      from glob import iglob
      from os import path
      # Python >= 3.9
      manage_py = next(iglob(path.join('**', 'manage.py'), recursive=True), None)
      if not manage_py:
          raise SystemExit('Could not find a Django project')
      project_location = path.dirname(path.abspath(manage_py))
      print('Found Django project in', project_location)
      print('##vso[task.setvariable variable=projectRoot]{}'.format(project_location))

- script: |
    python -m pip install --upgrade pip setuptools wheel
    pip install -r requirements.txt
    sudo pip3 install virtualenv
    mkdir ~/myproject
    cd ~/myproject
    virtualenv myprojectenv
    source myprojectenv/bin/activate
    pip install django
    # pip install unittest-xml-reporting
  displayName: 'Install prerequisites'

# - task: PublishTestResults@2
#   inputs:
#     testResultsFiles: "**/TEST-*.xml"
#     testRunTitle: 'Python $(PYTHON_VERSION)'
#   condition: succeededOrFailed()

- task: CopyFiles@2
  inputs:
    contents: '**'
    targetFolder: '$(Build.ArtifactStagingDirectory)'
  displayName: 'Copy files to artifact staging directory'

- task: PublishBuildArtifacts@1
  inputs:
    artifactName: 'myapp'
  displayName: 'Publish build artifacts'